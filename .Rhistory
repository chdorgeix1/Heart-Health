library(tmap)
library(RSQLite)
library(DBI)
conn <- dbConnect(RSQLite::SQLite(), dbname = "./sql_db/test_db.db")
sql_query =
'SELECT
p.State,
p.patient_id,
h.HadHeartAttack
FROM
tPatients AS p
INNER JOIN
tHealthStatus AS h ON p.patient_id = h.patient_id;'
result <- dbGetQuery(conn, sql_query)
result.shape
dim(result)
dbDisconnect()
dbDisconnect(RSQLite::SQLite(), dbname = "./sql_db/test_db.db")
dbDisconnect(conn)
result
result['State']
result['State'].unique()
unique(result['State'])
length(unique(result['State']))
dim(unique(result['State']))
install.packages("sf")  # For handling spatial data
install.packages("sf")
library(sf)
library(dplyr)
install.packages("dplyr")
us_states <- st_read("./data/geo_data/cb_2022_us_state_500k.kml")
type(us_states)
us_states
dim(us_states)
colnames(us_states)
us_states['Name']
us_states$Name
result$HadHeartAttack
summary_data <- aggregate(HadHeartAttack ~ state, data = result, FUN = sum)
summary_data <- aggregate(HadHeartAttack ~ State, data = result, FUN = sum)
df['HadHeartAttack'] = df['HadHeartAttack'].replace({'Yes': 1, 'No': 0})
result['HadHeartAttack'] = result['HadHeartAttack'].replace({'Yes': 1, 'No': 0})
result['HadHeartAttack'] <- result['HadHeartAttack'].replace({'Yes': 1, 'No': 0})
result['HadHeartAttack'] = result['HadHeartAttack'].replace({'Yes': 1, 'No': 0})
result['HadHeartAttack'] = result['HadHeartAttack'].replace({'Yes': 1 'No': 0})
result['HadHeartAttack'] = result['HadHeartAttack'].replace({'Yes': 1})
library(leaflet)
library(tmap)
library(RSQLite)
library(DBI)
library(sf)
library(dplyr)
conn <- dbConnect(RSQLite::SQLite(), dbname = "./sql_db/test_db.db")
sql_query =
'SELECT
p.State,
p.patient_id,
h.HadHeartAttack
FROM
tPatients AS p
INNER JOIN
tHealthStatus AS h ON p.patient_id = h.patient_id;'
result <- dbGetQuery(conn, sql_query)
dbDisconnect(conn)
result$had_heart_attack <- ifelse(result$had_heart_attack == "yes", 1, 0)
result$HadHeartAttack <- ifelse(result$HadHeartAttack == "yes", 1, 0)
summary_data <- aggregate(HadHeartAttack ~ State, data = result, FUN = sum)
summary_data
conn <- dbConnect(RSQLite::SQLite(), dbname = "./sql_db/test_db.db")
sql_query =
'SELECT
p.State,
p.patient_id,
h.HadHeartAttack
FROM
tPatients AS p
INNER JOIN
tHealthStatus AS h ON p.patient_id = h.patient_id;'
result <- dbGetQuery(conn, sql_query)
dbDisconnect(conn)
result$HadHeartAttack <- ifelse(result$HadHeartAttack == "Yes", 1, 0)
summary_data <- aggregate(HadHeartAttack ~ State, data = result, FUN = sum)
summary_data
summary_data <- aggregate(HadHeartAttack ~ State, data = result, FUN = mean)
summary_data
summary_data$HadHeartAttack
us_states <- st_read("./data/geo_data/cb_2022_us_state_500k.kml")
?us_states
class(us_states)
colnames(us_states)
us_states <- merge(us_states, summary_data, by.x = "Name", by.y = "State", all.x = TRUE)  # Left join
colnames(us_states)
names(us_states)[4] <- "ProportionHeartAttacks"
colnames(us_states)
us_states <- st_read("./data/geo_data/cb_2022_us_state_500k.kml")
us_states <- merge(us_states, summary_data, by.x = "Name", by.y = "State", all.x = TRUE)  # Left join
colnames(us_states)
names(us_states)[3] <- "ProportionHeartAttacks"
colnames(us_states)
dim(us_states)
us_states <- st_read("./data/geo_data/cb_2022_us_state_500k.kml")
dim(us_states)
us_states <- merge(us_states, summary_data, by.x = "Name", by.y = "State", all.x = TRUE)  # Left join
names(us_states)[3] <- "ProportionHeartAttacks"
leaflet(data = us_states) %>%
addTiles() %>%
addPolygons(
fillColor = ~colorQuantile("YlOrRd", ProportionHeartAttacks)(ProportionHeartAttacks),
weight = 2,
opacity = 1,
color = 'white',
dashArray = '3',
fillOpacity = 0.7,
popup = ~paste(name, "<br>", "Had Heart Attack (%)", ProportionHeartAttacks)
) %>%
setView(lng = -95, lat = 37.5, zoom = 4)  # Center on the US
leaflet(data = us_states) %>%
addTiles() %>%
addPolygons(
fillColor = ~colorQuantile("YlOrRd", ProportionHeartAttacks)(ProportionHeartAttacks),
weight = 2,
opacity = 1,
color = 'white',
dashArray = '3',
fillOpacity = 0.7,
popup = ~paste(Name, "<br>", "Had Heart Attack (%)", ProportionHeartAttacks)
) %>%
setView(lng = -95, lat = 37.5, zoom = 4)  # Center on the US
us_states
summary_data
summary_data <- aggregate(HadHeartAttack ~ State, data = result, FUN = mean)
summary_data
us_states <- st_read("./data/geo_data/cb_2022_us_state_500k.kml")
us_states <- merge(us_states, summary_data, by.x = "Name", by.y = "State", all.x = TRUE)  # Left join
names(us_states)[3] <- "ProportionHeartAttacks"
us_states
us_states$ProportionHeartAttacks
summary_data <- aggregate(HadHeartAttack ~ State, data = result, FUN = mean)
summary_data
us_states <- st_read("./data/geo_data/cb_2022_us_state_500k.kml")
us_states <- merge(us_states, summary_data, by.x = "Name", by.y = "State", all.x = TRUE, all.y = TRUE)  # Left join
names(us_states)[3] <- "ProportionHeartAttacks"
us_states$ProportionHeartAttacks
us_states$Name
us_states <- st_read("./data/geo_data/cb_2022_us_state_500k.kml")
us_states$Name
us_states$Name[0]
us_states$Name[1]
us_states$Name[1].split()
us_states$Name[1]
state_names <- us_states$Name
cleaned_state_names <- gsub("<at><openparen>|<closeparen>", "", state_names)
us_states$Name <- cleaned_state_names
us_states$Name
summary_data <- aggregate(HadHeartAttack ~ State, data = result, FUN = mean)
summary_data
us_states <- st_read("./data/geo_data/cb_2022_us_state_500k.kml")
state_names <- us_states$Name
cleaned_state_names <- gsub("<at><openparen>|<closeparen>", "", state_names)
us_states$Name <- cleaned_state_names
us_states$Name
us_states <- st_read("./data/geo_data/cb_2022_us_state_500k.kml")
cleaned_state_names <- gsub("<at><openparen>|<closeparen>", "", us_states$Name)
us_states$Name <- cleaned_state_names
us_states$Name
us_states <- merge(us_states, summary_data, by.x = "Name", by.y = "State", all.x = TRUE, all.y = TRUE)  # Left join
names(us_states)[3] <- "ProportionHeartAttacks"
us_states$Name
us_states$ProportionHeartAttacks
leaflet(data = us_states) %>%
addTiles() %>%
addPolygons(
fillColor = ~colorQuantile("YlOrRd", ProportionHeartAttacks)(ProportionHeartAttacks),
weight = 2,
opacity = 1,
color = 'white',
dashArray = '3',
fillOpacity = 0.7,
popup = ~paste(name, "<br>", "Had Heart Attack (%)", ProportionHeartAttacks)
) %>%
setView(lng = -95, lat = 37.5, zoom = 4)  # Center on the US
leaflet(data = us_states) %>%
addTiles() %>%
addPolygons(data = us_states$geometry,
fillColor = ~colorQuantile("YlOrRd", ProportionHeartAttacks)(ProportionHeartAttacks),
weight = 2,
opacity = 1,
color = 'white',
dashArray = '3',
fillOpacity = 0.7,
popup = ~paste(name, "<br>", "Had Heart Attack (%)", ProportionHeartAttacks)
) %>%
setView(lng = -95, lat = 37.5, zoom = 4)  # Center on the US
us_states <- sf::st_as_sf(us_states)
leaflet(data = us_states) %>%
addTiles() %>%
addPolygons(
fillColor = ~colorQuantile("YlOrRd", ProportionHeartAttacks)(ProportionHeartAttacks),
weight = 2,
opacity = 1,
color = 'white',
dashArray = '3',
fillOpacity = 0.7,
popup = ~paste(name, "<br>", "Had Heart Attack (%)", ProportionHeartAttacks)
) %>%
setView(lng = -95, lat = 37.5, zoom = 4)  # Center on the US
class(us_states$geometry[1])
us_states <- st_read("./data/geo_data/cb_2022_us_state_500k.kml")
class(us_states$geometry[1])
cleaned_state_names <- gsub("<at><openparen>|<closeparen>", "", us_states$Name)
us_states$Name <- cleaned_state_names
us_states <- merge(us_states, summary_data, by.x = "Name", by.y = "State", all.x = TRUE, all.y = TRUE)  # Left join
names(us_states)[3] <- "ProportionHeartAttacks"
class(us_states$geometry[1])
plot(us_states$geometry)
tmap_mode('plot')
map <- tm_shape(us_states$geometry) +
tm_polygons() +  # Change this to tm_lines() or tm_dots() if needed
tm_layout(title = "Simple Map from KML File")  # Add a title
# Print the map
print(map)
us_states$geometry
dim(us_states$geometry)
length(us_states$geometry)
na.omit(us_states$geometry)
length(na.omit(us_states$geometry))
map <- tm_shape(na.omit(us_states$geometry)) +
tm_polygons() +  # Change this to tm_lines() or tm_dots() if needed
tm_layout(title = "Simple Map from KML File")  # Add a title
# Print the map
print(map)
us_states
us_states$Name
summary_data$State
us_states <- st_read("./data/geo_data/cb_2022_us_state_500k.kml")
dim(us_states)
summary_data <- aggregate(HadHeartAttack ~ State, data = result, FUN = mean)
dim(summary_data)
us_states <- st_read("./data/geo_data/cb_2022_us_state_500k.kml")
cleaned_state_names <- gsub("<at><openparen>|<closeparen>", "", us_states$Name)
us_states$Name <- cleaned_state_names
us_states <- merge(us_states, summary_data, by.x = "Name", by.y = "State", all.x = TRUE, all.y = TRUE)  # Left join
names(us_states)[3] <- "ProportionHeartAttacks"
dim(us_states)
us_states <- us_states.dropna()
us_states <- na.omit(us_states)
dim(us_states)
library(leaflet)
library(tmap)
library(RSQLite)
library(DBI)
library(sf)
library(dplyr)
conn <- dbConnect(RSQLite::SQLite(), dbname = "./sql_db/test_db.db")
sql_query =
'SELECT
p.State,
p.patient_id,
h.HadHeartAttack
FROM
tPatients AS p
INNER JOIN
tHealthStatus AS h ON p.patient_id = h.patient_id;'
result <- dbGetQuery(conn, sql_query)
dbDisconnect(conn)
result$HadHeartAttack <- ifelse(result$HadHeartAttack == "Yes", 1, 0)
summary_data <- aggregate(HadHeartAttack ~ State, data = result, FUN = mean)
us_states <- st_read("./data/geo_data/cb_2022_us_state_500k.kml")
cleaned_state_names <- gsub("<at><openparen>|<closeparen>", "", us_states$Name)
us_states$Name <- cleaned_state_names
us_states <- merge(us_states, summary_data, by.x = "Name", by.y = "State", all.x = TRUE, all.y = TRUE)  # Left join
names(us_states)[3] <- "ProportionHeartAttacks"
us_states <- na.omit(us_states)
tmap_mode('plot')
map <- tm_shape(na.omit(us_states$geometry)) +
tm_polygons() +  # Change this to tm_lines() or tm_dots() if needed
tm_layout(title = "Simple Map from KML File")  # Add a title
# Print the map
print(map)
us_states$Name
us_states <- subset(us_states, !(Name %in% c("Guam", "Alaska", "Puerto Rico")))
tmap_mode('plot')
map <- tm_shape(na.omit(us_states$geometry)) +
tm_polygons() +  # Change this to tm_lines() or tm_dots() if needed
tm_layout(title = "Simple Map from KML File")  # Add a title
# Print the map
print(map)
us_states <- subset(us_states, !(Name %in% c("Guam", "Alaska", "Puerto Rico", "Hawaii")))
tmap_mode('plot')
map <- tm_shape(na.omit(us_states$geometry)) +
tm_polygons() +  # Change this to tm_lines() or tm_dots() if needed
tm_layout(title = "Simple Map from KML File")  # Add a title
# Print the map
print(map)
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Proportion of Heart Attacks") +  # Title for the legend
tm_layout(title = "Map of Proportion of Heart Attacks by State")  # Add a title
# Print the map
print(map)
tmap_mode('view')
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Proportion of Heart Attacks") +  # Title for the legend
tm_layout(title = "Map of Proportion of Heart Attacks by State")  # Add a title
# Print the map
print(map)
us_states$ProportionHeartAttacks <- us_states$ProportionHeartAttacks*100
tmap_mode('view')
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Proportion of Individuals Reporting Heart Attacks") +  # Title for the legend
tm_layout(title = "Map of Proportion of Heart Attacks by State")  # Add a title
# Print the map
print(map)
tmap_mode('view')
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks") +
popup = paste("State: ", us_states$name,
"<br>Proportion of Heart Attacks: ",
us_states$ProportionHeartAttacks)) +# Title for the legend
tmap_mode('view')
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks") +
popup = paste("State: ", us_states$name,
"<br>Proportion of Heart Attacks: ",
us_states$ProportionHeartAttacks) +# Title for the legend
tm_layout(title = "Map of Proportion of Heart Attacks by State")  # Add a title
tmap_mode('view')
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks") +
popup = paste("State: ", us_states$Name,
"<br>Proportion of Heart Attacks: ",
us_states$ProportionHeartAttacks) +# Title for the legend
tm_layout(title = "Map of Proportion of Heart Attacks by State")  # Add a title
tmap_mode('view')
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks") +
popup = paste("State: ", us_states$Name,
"Proportion of Heart Attacks: ",
us_states$ProportionHeartAttacks) +# Title for the legend
tm_layout(title = "Map of Proportion of Heart Attacks by State")  # Add a title
tmap_mode('view')
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks") +
popup = paste("State: ", us_states$Name) +# Title for the legend
tm_layout(title = "Map of Proportion of Heart Attacks by State")  # Add a title
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks") +
popup = paste("State: ", us_states$Name) + # Title for the legend
tm_layout(title = "Map of Proportion of Heart Attacks by State")  # Add a title
# Print the map
print(map)
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks") +
tm_layout(title = "Map of Proportion of Heart Attacks by State")  # Add a title
# Print the map
print(map)
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks") +
popup.vars=c("ID"="GRID_ID") +
tm_layout(title = "Map of Proportion of Heart Attacks by State")  # Add a title
# Print the map
print(map)
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks") +
popup.vars=c("ID"="GRID_ID") #+
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks") +
tm_layout(title = "Map of Proportion of Heart Attacks by State") +  # Add a title
popup.vars=c("ID"="GRID_ID")
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks") +
tm_layout(title = "Map of Proportion of Heart Attacks by State")  # Add a title
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks"
popup = paste("State: ", us_states$name,
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks",
popup = paste("State: ", us_states$Name,
"<br>Proportion of Heart Attacks: ",
us_states$ProportionHeartAttacks)) +
tm_layout(title = "Map of Proportion of Heart Attacks by State")  # Add a title
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks",
popup = paste("State: ", us_states$Name)) +
tm_layout(title = "Map of Proportion of Heart Attacks by State")  # Add a title
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks") +
tm_layout(title = "Map of Proportion of Heart Attacks by State")  # Add a title
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks",
popup = paste("State: ")) +
tm_layout(title = "Map of Proportion of Heart Attacks by State")  # Add a title
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks",
popup = ("State: ")) +
tm_layout(title = "Map of Proportion of Heart Attacks by State")  # Add a title
tmap_mode('view')
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks",
popup = ("State: ")) +
tm_layout(title = "Map of Proportion of Heart Attacks by State")  # Add a title
# Print the map
print(map)
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks",
popup.vars = c("State" = "name",
"Proportion of Heart Attacks" = "ProportionHeartAttacks")) +
tm_layout(title = "Map of Proportion of Heart Attacks by State")  # Add a title
# Print the map
print(map)
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks",
popup.vars = c("State" = "Name",
"Proportion of Heart Attacks" = "ProportionHeartAttacks")) +
tm_layout(title = "Map of Proportion of Heart Attacks by State")  # Add a title
# Print the map
print(map)
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks",
popup.vars = c("Proportion of Heart Attacks" = "ProportionHeartAttacks")) +
tm_layout(title = "Map of Proportion of Heart Attacks by State")  # Add a title
# Print the map
print(map)
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks",
popup.vars = c("Proportion of Heart Attacks" = paste("ProportionHeartAttacks", '%'))) +
tm_layout(title = "Map of Proportion of Heart Attacks by State")  # Add a title
# Print the map
print(map)
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks",
popup.vars = c("Proportion of Heart Attacks" = "ProportionHeartAttacks")) +
tm_layout(title = "Map of Proportion of Heart Attacks by State")  # Add a title
# Print the map
print(map)
