title = "Percent of Individuals Reporting Heart Attacks") +
popup = paste("State: ", us_states$name,
"<br>Proportion of Heart Attacks: ",
us_states$ProportionHeartAttacks) +# Title for the legend
tm_layout(title = "Map of Proportion of Heart Attacks by State")  # Add a title
tmap_mode('view')
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks") +
popup = paste("State: ", us_states$Name,
"<br>Proportion of Heart Attacks: ",
us_states$ProportionHeartAttacks) +# Title for the legend
tm_layout(title = "Map of Proportion of Heart Attacks by State")  # Add a title
tmap_mode('view')
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks") +
popup = paste("State: ", us_states$Name,
"Proportion of Heart Attacks: ",
us_states$ProportionHeartAttacks) +# Title for the legend
tm_layout(title = "Map of Proportion of Heart Attacks by State")  # Add a title
tmap_mode('view')
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks") +
popup = paste("State: ", us_states$Name) +# Title for the legend
tm_layout(title = "Map of Proportion of Heart Attacks by State")  # Add a title
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks") +
popup = paste("State: ", us_states$Name) + # Title for the legend
tm_layout(title = "Map of Proportion of Heart Attacks by State")  # Add a title
# Print the map
print(map)
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks") +
tm_layout(title = "Map of Proportion of Heart Attacks by State")  # Add a title
# Print the map
print(map)
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks") +
popup.vars=c("ID"="GRID_ID") +
tm_layout(title = "Map of Proportion of Heart Attacks by State")  # Add a title
# Print the map
print(map)
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks") +
popup.vars=c("ID"="GRID_ID") #+
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks") +
tm_layout(title = "Map of Proportion of Heart Attacks by State") +  # Add a title
popup.vars=c("ID"="GRID_ID")
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks") +
tm_layout(title = "Map of Proportion of Heart Attacks by State")  # Add a title
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks"
popup = paste("State: ", us_states$name,
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks",
popup = paste("State: ", us_states$Name,
"<br>Proportion of Heart Attacks: ",
us_states$ProportionHeartAttacks)) +
tm_layout(title = "Map of Proportion of Heart Attacks by State")  # Add a title
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks",
popup = paste("State: ", us_states$Name)) +
tm_layout(title = "Map of Proportion of Heart Attacks by State")  # Add a title
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks") +
tm_layout(title = "Map of Proportion of Heart Attacks by State")  # Add a title
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks",
popup = paste("State: ")) +
tm_layout(title = "Map of Proportion of Heart Attacks by State")  # Add a title
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks",
popup = ("State: ")) +
tm_layout(title = "Map of Proportion of Heart Attacks by State")  # Add a title
tmap_mode('view')
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks",
popup = ("State: ")) +
tm_layout(title = "Map of Proportion of Heart Attacks by State")  # Add a title
# Print the map
print(map)
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks",
popup.vars = c("State" = "name",
"Proportion of Heart Attacks" = "ProportionHeartAttacks")) +
tm_layout(title = "Map of Proportion of Heart Attacks by State")  # Add a title
# Print the map
print(map)
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks",
popup.vars = c("State" = "Name",
"Proportion of Heart Attacks" = "ProportionHeartAttacks")) +
tm_layout(title = "Map of Proportion of Heart Attacks by State")  # Add a title
# Print the map
print(map)
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks",
popup.vars = c("Proportion of Heart Attacks" = "ProportionHeartAttacks")) +
tm_layout(title = "Map of Proportion of Heart Attacks by State")  # Add a title
# Print the map
print(map)
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks",
popup.vars = c("Proportion of Heart Attacks" = paste("ProportionHeartAttacks", '%'))) +
tm_layout(title = "Map of Proportion of Heart Attacks by State")  # Add a title
# Print the map
print(map)
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks",
popup.vars = c("Proportion of Heart Attacks" = "ProportionHeartAttacks")) +
tm_layout(title = "Map of Proportion of Heart Attacks by State")  # Add a title
# Print the map
print(map)
library(leaflet)
library(tmap)
library(RSQLite)
library(DBI)
library(sf)
library(dplyr)
conn <- dbConnect(RSQLite::SQLite(), dbname = "./sql_db/test_db.db")
sql_query =
'SELECT
p.State,
p.patient_id,
h.HadHeartAttack
FROM
tPatients AS p
INNER JOIN
tHealthStatus AS h ON p.patient_id = h.patient_id;'
result <- dbGetQuery(conn, sql_query)
dbDisconnect(conn)
result$HadHeartAttack <- ifelse(result$HadHeartAttack == "Yes", 1, 0)
summary_data <- aggregate(HadHeartAttack ~ State, data = result, FUN = mean)
us_states <- st_read("./data/geo_data/cb_2022_us_state_500k.kml")
cleaned_state_names <- gsub("<at><openparen>|<closeparen>", "", us_states$Name)
us_states$Name <- cleaned_state_names
us_states <- merge(us_states, summary_data, by.x = "Name", by.y = "State", all.x = TRUE, all.y = TRUE)  # Left join
names(us_states)[3] <- "ProportionHeartAttacks"
us_states <- na.omit(us_states)
us_states <- subset(us_states, !(Name %in% c("Guam", "Alaska", "Puerto Rico", "Hawaii")))
us_states$ProportionHeartAttacks <- us_states$ProportionHeartAttacks*100
tmap_mode('view')
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks",
popup.vars = c("Proportion of Heart Attacks" = "ProportionHeartAttacks")) +
tm_layout(title = "Map of Proportion of Heart Attacks by State")  # Add a title
# Print the map
print(map)
tmap_save(map, "my_map.html")
library(leaflet)
library(tmap)
library(RSQLite)
library(DBI)
library(sf)
library(dplyr)
conn <- dbConnect(RSQLite::SQLite(), dbname = "./sql_db/test_db.db")
sql_query =
'SELECT
p.State,
p.patient_id,
h.HadHeartAttack
FROM
tPatients AS p
INNER JOIN
tHealthStatus AS h ON p.patient_id = h.patient_id;'
result <- dbGetQuery(conn, sql_query)
dbDisconnect(conn)
result$HadHeartAttack <- ifelse(result$HadHeartAttack == "Yes", 1, 0)
summary_data <- aggregate(HadHeartAttack ~ State, data = result, FUN = mean)
summary_data.head()
head(summary_data)
summary(result)
dim(result)
head(result)
df <- result
heart_attack_by_state <- df %>%
group_by(State) %>%
summarize(
total_respondents = n_distinct(patient_id),
heart_attack_count = sum(HadHeartAttack == 1, na.rm = TRUE),
heart_attack_proportion = heart_attack_count / total_respondents
) %>%
ungroup()
head(heart_attack_by_state)
head(summary_data)
class(heart_attack_by_state)
state_pop_data <- read.csv('./data/state_data/state_population_2020-2023.csv')
head(state_pop_data)
head(state_pop_data[][0:2])
head(state_pop_data[0:2][0:2])
head(state_pop_data[1][0:2])
head(state_pop_data[3][0:2])
head(state_pop_data[][0:4])
state_pop_data <- read.csv('./data/state_data/state_population_2020-2023.csv')
state_pop_data <- state_pop_data[-c(0,1,2,3), ]
head(state_pop_data)
state_pop_data <- read.csv('./data/state_data/state_population_2020-2023.csv')
state_pop_data <- state_pop_data[-c(0,1,2), ]
head(state_pop_data)
colnames(state_pop_data)
state_pop_data <- read.csv('./data/state_data/state_population_2020-2023.csv')
head(state_pop_data)
state_pop_data[ , c(1, 3)]
state_pop_data <- read.csv('./data/state_data/state_population_2020-2023.csv')
state_pop_data <- state_pop_data[ , c(1, 3)]
head(state_pop_data)
colnames(state_pop_data) <- c("State", "Pop_2022")
head(state_pop_data)
state_pop_data <- state_pop_data[-c(1, 2, 3), ]
head(state_pop_data)
state_pop_data <- read.csv('./data/state_data/state_population_2020-2023.csv')
state_pop_data <- state_pop_data[ , c(1, 3)]
state_pop_data <- state_pop_data[-c(1, 2, 3), ]
colnames(state_pop_data) <- c("State", "Pop_2022")
head(state_pop_data)
state_pop_data <- read.csv('./data/state_data/state_population_2020-2023.csv')
state_pop_data <- state_pop_data[ , c(1, 3)]
state_pop_data <- state_pop_data[-c(1, 2, 3), ]
colnames(state_pop_data) <- c("Location", "Pop_2022")
head(state_pop_data)
tail(state_pop_data)
tail(state_pop_data, 10)
state_pop_data <- state_pop_data[-c(60:67), ]
tail(state_pop_data, 10)
state_pop_data <- read.csv('./data/state_data/state_population_2020-2023.csv')
state_pop_data <- state_pop_data[ , c(1, 3)]
state_pop_data <- state_pop_data[-c(1, 2, 3), ]
state_pop_data <- state_pop_data[-c(60:67), ]
colnames(state_pop_data) <- c("Location", "Pop_2022")
head(state_pop_data)
tail(state_pop_data, 10)
state_pop_data <- read.csv('./data/state_data/state_population_2020-2023.csv')
state_pop_data <- state_pop_data[ , c(1, 3)]
state_pop_data <- state_pop_data[-c(1, 2, 3), ]
dim(state_pop_data)
state_pop_data <- state_pop_data[-c(60:67), ]
dim(state_pop_data)
tail(state_pop_data, 10)
state_pop_data <- read.csv('./data/state_data/state_population_2020-2023.csv')
state_pop_data <- state_pop_data[ , c(1, 3)]
state_pop_data <- state_pop_data[-c(1, 2, 3), ]
dim(state_pop_data)
state_pop_data <- state_pop_data[-c(57:67), ]
dim(state_pop_data)
tail(state_pop_data, 10)
colnames(state_pop_data) <- c("Location", "Pop_2022")
tail(state_pop_data, 10)
state_pop_data <- read.csv('./data/state_data/state_population_2020-2023.csv')
state_pop_data <- state_pop_data[ , c(1, 3)]
state_pop_data <- state_pop_data[-c(1, 2, 3), ]
state_pop_data <- state_pop_data[-c(57:67), ]
colnames(state_pop_data) <- c("Location", "Pop_2022")
head(state_pop_data)
tail(state_pop_data, 10)
colnames(state_pop_data)
state_pop_data['Location']
state_pop_data <- read.csv('./data/state_data/state_population_2020-2023.csv')
state_pop_data <- state_pop_data[ , c(1, 3)]
state_pop_data <- state_pop_data[-c(1, 2, 3), ]
state_pop_data <- state_pop_data[-c(57:67), ]
colnames(state_pop_data) <- c("Location", "Pop_2022")
head(state_pop_data)
tail(state_pop_data, 10)
state_pop_data['Location'] <- gsub("<at><openparen>|<closeparen>", "", state_pop_data$Location)
tail(state_pop_data, 10)
state_pop_data['Location'] <- gsub(".", "", state_pop_data$Location)
head(state_pop_data)
tail(state_pop_data, 10)
state_pop_data <- read.csv('./data/state_data/state_population_2020-2023.csv')
state_pop_data <- state_pop_data[ , c(1, 3)]
state_pop_data <- state_pop_data[-c(1, 2, 3), ]
state_pop_data <- state_pop_data[-c(57:67), ]
colnames(state_pop_data) <- c("Location", "Pop_2022")
head(state_pop_data)
tail(state_pop_data, 10)
state_pop_data$Location <- gsub(".", "", state_pop_data$Location)
head(state_pop_data)
state_pop_data$Location
state_pop_data <- read.csv('./data/state_data/state_population_2020-2023.csv')
state_pop_data <- state_pop_data[ , c(1, 3)]
state_pop_data <- state_pop_data[-c(1, 2, 3), ]
state_pop_data <- state_pop_data[-c(57:67), ]
colnames(state_pop_data) <- c("Location", "Pop_2022")
head(state_pop_data)
tail(state_pop_data, 10)
state_pop_data$Location <- gsub(".", state_pop_data$Location)
state_pop_data$Location
state_pop_data$Location <- gsub("\\.", "", state_pop_data$Location)
state_pop_data$Location
state_pop_data <- read.csv('./data/state_data/state_population_2020-2023.csv')
state_pop_data <- state_pop_data[ , c(1, 3)]
state_pop_data <- state_pop_data[-c(1, 2, 3), ]
state_pop_data <- state_pop_data[-c(57:67), ]
colnames(state_pop_data) <- c("Location", "Pop_2022")
state_pop_data$Location <- gsub("\\.", "", state_pop_data$Location)
state_pop_data$Location
state_pop_data <- read.csv('./data/state_data/state_population_2020-2023.csv')
state_pop_data <- state_pop_data[ , c(1, 3)]
state_pop_data <- state_pop_data[-c(1, 2, 3, 4, 5, 6, 7), ]
state_pop_data <- state_pop_data[-c(57:67), ]
colnames(state_pop_data) <- c("Location", "Pop_2022")
state_pop_data$Location <- gsub("\\.", "", state_pop_data$Location)
state_pop_data$Location
state_pop_data <- read.csv('./data/state_data/state_population_2020-2023.csv')
state_pop_data <- state_pop_data[ , c(1, 3)]
state_pop_data <- state_pop_data[-c(1, 2, 3, 4, 5, 6, 7), ]
state_pop_data <- state_pop_data[-c(54:67), ]
colnames(state_pop_data) <- c("Location", "Pop_2022")
state_pop_data$Location <- gsub("\\.", "", state_pop_data$Location)
state_pop_data$Location
state_pop_data <- read.csv('./data/state_data/state_population_2020-2023.csv')
state_pop_data <- state_pop_data[ , c(1, 3)]
state_pop_data <- state_pop_data[-c(1, 2, 3, 4, 5, 6, 7, 8), ]
state_pop_data <- state_pop_data[-c(52:67), ]
colnames(state_pop_data) <- c("Location", "Pop_2022")
state_pop_data$Location <- gsub("\\.", "", state_pop_data$Location)
state_pop_data$Location
length(state_pop_data$Location)
library(leaflet)
library(tmap)
library(RSQLite)
library(DBI)
library(sf)
library(dplyr)
conn <- dbConnect(RSQLite::SQLite(), dbname = "./sql_db/test_db.db")
sql_query =
'SELECT
p.State,
p.patient_id,
h.HadHeartAttack
FROM
tPatients AS p
INNER JOIN
tHealthStatus AS h ON p.patient_id = h.patient_id;'
query_df <- dbGetQuery(conn, sql_query)
dbDisconnect(conn)
query_df$HadHeartAttack <- ifelse(query_df$HadHeartAttack == "Yes", 1, 0)
heart_att_state_df <- query_df %>%
group_by(State) %>%
summarize(
total_respondents = n_distinct(patient_id),
heart_attack_count = sum(HadHeartAttack == 1, na.rm = TRUE),
heart_attack_proportion = heart_attack_count / total_respondents
) %>%
ungroup()
state_pop_data <- read.csv('./data/state_data/state_population_2020-2023.csv')
state_pop_data <- state_pop_data[ , c(1, 3)]
state_pop_data <- state_pop_data[-c(1, 2, 3, 4, 5, 6, 7, 8), ]
state_pop_data <- state_pop_data[-c(52:67), ]
colnames(state_pop_data) <- c("Location", "Pop_2022")
state_pop_data$Location <- gsub("\\.", "", state_pop_data$Location)
us_states <- st_read("./data/geo_data/cb_2022_us_state_500k.kml")
cleaned_state_names <- gsub("<at><openparen>|<closeparen>", "", us_states$Name)
us_states$Name <- cleaned_state_names
us_states <- st_read("./data/geo_data/cb_2022_us_state_500k.kml")
us_states$Name <- gsub("<at><openparen>|<closeparen>", "", us_states$Name)
us_states <- merge(us_states, heart_att_state_df, by.x = "Name", by.y = "State", all.x = TRUE, all.y = TRUE)  # Left join
us_states <- merge(us_states, state_pop_data, by.x = "Name", by.y = "Location", all.x = TRUE, all.y = TRUE)  # Left join
head(us_states)
names(us_states)[3] <- "ProportionHeartAttacks"
us_states <- na.omit(us_states)
us_states <- subset(us_states, !(Name %in% c("Guam", "Alaska", "Puerto Rico", "Hawaii")))
us_states$ProportionHeartAttacks <- us_states$ProportionHeartAttacks*100
head(us_states)
us_states <- st_read("./data/geo_data/cb_2022_us_state_500k.kml")
us_states$Name <- gsub("<at><openparen>|<closeparen>", "", us_states$Name)
us_states <- merge(us_states, heart_att_state_df, by.x = "Name", by.y = "State", all.x = TRUE, all.y = TRUE)  # Left join
us_states <- merge(us_states, state_pop_data, by.x = "Name", by.y = "Location", all.x = TRUE, all.y = TRUE)  # Left join
#names(us_states)[3] <- "ProportionHeartAttacks"
us_states <- na.omit(us_states)
us_states <- subset(us_states, !(Name %in% c("Guam", "Alaska", "Puerto Rico", "Hawaii")))
us_states$ProportionHeartAttacks <- us_states$ProportionHeartAttacks*100
head(us_states)
names(us_states)[5] <- "ProportionHeartAttacks"
us_states <- na.omit(us_states)
us_states <- subset(us_states, !(Name %in% c("Guam", "Alaska", "Puerto Rico", "Hawaii")))
us_states$ProportionHeartAttacks <- us_states$ProportionHeartAttacks*100
head(us_states)
tmap_mode('view')
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks",
popup.vars = c("Proportion of Heart Attacks" = "ProportionHeartAttacks",
'Total Respondents' = 'total_respondents',
'Number of Heart Attacks in Respondents' = 'heart_attack_count',
'State Population in 2022' = 'Pop_2022')) +
tm_layout(title = "Map of Proportion of Heart Attacks by State")  # Add a title
# Print the map
print(map)
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks",
popup.vars = c("Proportion of Heart Attacks" = paste("ProportionHeartAttacks", '%') ,
'Total Respondents' = 'total_respondents',
'Number of Heart Attacks in Respondents' = 'heart_attack_count',
'State Population in 2022' = 'Pop_2022')) +
tm_layout(title = "Map of Proportion of Heart Attacks by State")  # Add a title
# Print the map
print(map)
us_states$ProportionHeartAttacks <- round(us_states$ProportionHeartAttacks, 3)
head(us_states)
us_states$ProportionHeartAttacks <- round(us_states$ProportionHeartAttacks, 2)
head(us_states)
us_states$ProportionHeartAttacks <- round(us_states$ProportionHeartAttacks, 1)
head(us_states)
tmap_mode('view')
# Create the map, coloring by ProportionHeartAttacks
map <- tm_shape(us_states) +
tm_polygons(col = "ProportionHeartAttacks",  # Specify the column for coloring
palette = "YlOrRd",            # Choose a color palette
title = "Percent of Individuals Reporting Heart Attacks",
popup.vars = c("Proportion of Heart Attacks" = "ProportionHeartAttacks" ,
'Total Respondents' = 'total_respondents',
'Number of Heart Attacks in Respondents' = 'heart_attack_count',
'State Population in 2022' = 'Pop_2022')) +
tm_layout(title = "Map of Proportion of Heart Attacks by State")  # Add a title
# Print the map
print(map)
tmap_save(map, "/generated_maps/interactive_US_map.html")
tmap_save(map, "./generated_maps/interactive_US_map.html")
library(leaflet)
library(tmap)
library(RSQLite)
library(DBI)
library(sf)
library(dplyr)
conn <- dbConnect(RSQLite::SQLite(), dbname = "./sql_db/test_db.db")
sql_query =
'SELECT
p.State,
p.patient_id,
p.AgeCategory,
h.HadHeartAttack
FROM
tPatients AS p
INNER JOIN
tHealthStatus AS h ON p.patient_id = h.patient_id;'
query_df <- dbGetQuery(conn, sql_query)
dbDisconnect(conn)
head(query_df)
query_df$AgeCategory
